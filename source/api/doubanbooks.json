{"count":20,"start":0,"total":15,"collections":[{"status":"wish","updated":"2015-07-08 23:18:30","user_id":"129154019","tags":["字体设计","MyWish"],"book":{"rating":{"max":10,"numRaters":22,"average":"9.5","min":0},"subtitle":"","author":["Karen Cheng"],"pubdate":"2014-1","tags":[{"count":37,"name":"字体设计","title":"字体设计"},{"count":28,"name":"设计","title":"设计"},{"count":16,"name":"字体","title":"字体"},{"count":10,"name":"Typography","title":"Typography"},{"count":9,"name":"平面设计","title":"平面设计"},{"count":3,"name":"设计教程","title":"设计教程"},{"count":2,"name":"設計八卦","title":"設計八卦"},{"count":1,"name":"视觉传达","title":"视觉传达"}],"origin_title":"Designing Type","image":"https:\/\/img1.doubanio.com\/mpic\/s27257194.jpg","binding":"平装","translator":["张安宇"],"catalog":"","pages":"232","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s27257194.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s27257194.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s27257194.jpg"},"alt":"http:\/\/book.douban.com\/subject\/25842572\/","id":"25842572","publisher":"人民邮电出版社","isbn10":"7115320667","isbn13":"9787115320667","title":"字体设计的规则与艺术","url":"http:\/\/api.douban.com\/v2\/book\/25842572","alt_title":"Designing Type","author_intro":"","summary":"","price":"98"},"book_id":"25842572","id":938778686},{"status":"wish","updated":"2015-07-01 15:46:27","user_id":"129154019","tags":["Webkit","MyWish","web"],"book":{"rating":{"max":10,"numRaters":39,"average":"7.5","min":0},"subtitle":"","author":["朱永盛"],"pubdate":"2014-6","tags":[{"count":71,"name":"Webkit","title":"Webkit"},{"count":53,"name":"浏览器内核","title":"浏览器内核"},{"count":19,"name":"html5","title":"html5"},{"count":18,"name":"web前端","title":"web前端"},{"count":13,"name":"计算机","title":"计算机"},{"count":11,"name":"JavaScript","title":"JavaScript"},{"count":11,"name":"[技术]浏览器","title":"[技术]浏览器"},{"count":8,"name":"web","title":"web"}],"origin_title":"","image":"https:\/\/img1.doubanio.com\/mpic\/s27307802.jpg","binding":"","translator":[],"catalog":"第1章　浏览器和浏览器内核\t1\n1.1  浏览器\t1\n1.1.1  浏览器简介\t1\n1.1.2  浏览器特性\t4\n1.1.3  HTML\t5\n1.1.4　用户代理和浏览器行为\t8\n1.1.5  实践：浏览器用户代理\t9\n1.2  浏览器内核及特性\t11\n1.2.1  内核和主流内核\t11\n1.2.2  内核特征\t12\n1.3  WebKit内核\t15\n1.3.1  WebKit介绍\t15\n1.3.2  WebKit和WebKit2\t16\n1.3.3  Chromium内核：Blink\t18\n1.4  本书结构\t18\n第2章　HTML网页和结构\t21\n2.1  网页构成\t21\n2.1.1  基本元素和树状结构\t21\n2.1.2  HTML5新特性\t23\n2.2  网页结构\t25\n2.2.1  框结构\t25\n2.2.2  层次结构\t27\n2.2.3  实践：理解网页结构\t29\n2.3  WebKit的网页渲染过程\t31\n2.3.1  加载和渲染\t31\n2.3.2  WebKit的渲染过程\t32\n2.3.3  实践：从网页到可视化结果\t35\n第3章　WebKit架构和模块\t39\n3.1  WebKit架构及模块\t39\n3.1.1  获取WebKit\t39\n3.1.2  WebKit架构\t40\n3.1.3  WebKit源代码结构\t43\n3.2  基于Blink的Chromium浏览器结构\t45\n3.2.1  Chromium浏览器的架构及模块\t45\n3.2.2  实践：从Chromium代码结构和运行状态理解现代浏览器\t56\n3.3  WebKit2\t61\n3.3.1  WebKit2架构及模块\t61\n3.3.2  WebKit和WebKit2嵌入式接口\t62\n3.3.3  比较WebKit2和Chromium的多进程模型以及接口\t63\n第4章　资源加载和网络栈\t65\n4.1  WebKit资源加载机制\t65\n4.1.1  资源\t65\n4.1.2  资源缓存\t67\n4.1.3  资源加载器\t68\n4.1.4  过程\t69\n4.1.5  资源的生命周期\t70\n4.1.6  实践：资源的缓存\t71\n4.2  Chromium多进程资源加载\t74\n4.2.1  多进程\t74\n4.2.2  工作方式和资源共享\t76\n4.3  网络栈\t78\n4.3.1  WebKit的网络设施\t78\n4.3.2  Chromium网络栈\t78\n4.3.3  磁盘本地缓存\t84\n4.3.4  Cookie机制\t88\n4.3.5  安全机制\t90\n4.3.6  高性能网络栈\t90\n4.3.7  实践：Chromium网络工具和信息\t97\n4.4  实践：高效的资源使用策略\t99\n4.4.1  DNS和TCP连接\t99\n4.4.2  资源的数量\t99\n4.4.3  资源的数据量\t100\n第5章　HTML解释器和DOM模型\t101\n5.1  DOM模型\t101\n5.1.1  DOM标准\t101\n5.1.2  DOM树\t104\n5.2  HTML解释器\t107\n5.2.1  解释过程\t107\n5.2.2  词法分析\t110\n5.2.3  XSSAuditor验证词语\t111\n5.2.4  词语到节点\t111\n5.2.5  节点到DOM树\t113\n5.2.6  网页基础设施\t114\n5.2.7  线程化的解释器\t117\n5.2.8  JavaScript的执行\t119\n5.2.9  实践：理解DOM树\t120\n5.3  DOM的事件机制\t121\n5.3.1  事件的工作过程\t122\n5.3.2  WebKit的事件处理机制\t123\n5.3.3  实践：事件的传递机制\t125\n5.4  影子（Shadow）DOM\t127\n5.4.1  什么是影子DOM\t127\n5.4.2  WebKit的支持\t128\n5.4.3  实践：使用影子DOM\t129\n第6章　CSS解释器和样式布局\t131\n6.1  CSS基本功能\t131\n6.1.1  简介\t131\n6.1.2  样式规则\t134\n6.1.3  选择器\t135\n6.1.4  框模型\t136\n6.1.5  包含块（Containing Block）模型\t139\n6.1.6  CSS样式属性\t139\n6.1.7  CSSOM（CSS Object Model）\t140\n6.1.8  实践：理解CSSOM和选择器\t141\n6.2  CSS解释器和规则匹配\t143\n6.2.1  样式的WebKit表示类\t143\n6.2.2  解释过程\t146\n6.2.3  样式规则匹配\t148\n6.2.4  实践：样式匹配\t149\n6.2.5  JavaScript设置样式\t151\n6.3  WebKit布局\t152\n6.3.1  基础\t152\n6.3.2  布局计算\t153\n6.3.3  布局测试\t155\n第7章　渲染基础\t157\n7.1  RenderObject树\t157\n7.1.1  RenderObject基础类\t157\n7.1.2  RenderObject树\t162\n7.2  网页层次和RenderLayer树\t163\n7.2.1  层次和RenderLayer对象\t163\n7.2.2  构建RenderLayer树\t165\n7.3  渲染方式\t167\n7.3.1  绘图上下文（GraphicsContext）\t167\n7.3.2  渲染方式\t169\n7.4  WebKit软件渲染技术\t172\n7.4.1  软件渲染过程\t172\n7.4.2  Chromium的多进程软件渲染技术\t177\n7.4.3  实践：软件渲染过程\t180\n第8章　硬件加速机制\t183\n8.1  硬件加速基础\t183\n8.1.1  概念\t183\n8.1.2  WebKit硬件加速设施\t185\n8.1.3  硬件渲染过程\t189\n8.1.4  3D图形上下文\t193\n8.2  Chromium的硬件加速机制\t194\n8.2.1  GraphicsLayer的支持\t194\n8.2.2  框架\t196\n8.2.3  命令缓冲区\t200\n8.2.4  Chromium合成器（Chromium Compositor）\t202\n8.2.5  实践：减少重绘\t213\n8.3  其他硬件加速模块\t216\n8.3.1  2D图形的硬件加速机制\t216\n8.3.2  WebGL\t223\n8.3.3  CSS 3D变形\t228\n8.3.4  其他\t229\n8.3.5  实践：Chromium的支持\t229\n第9章　JavaScript引擎\t231\n9.1  概述\t231\n9.1.1  JavaScript语言\t231\n9.1.2  JavaScript引擎\t238\n9.1.3  JavaScript引擎和渲染引擎\t241\n9.2  V8引擎\t242\n9.2.1  基础\t242\n9.2.2  工作原理\t246\n9.2.3  绑定和扩展\t258\n9.3  JavaScriptCore引擎\t259\n9.3.1  原理\t259\n9.3.2  架构和模块\t259\n9.3.4  内存管理\t265\n9.3.5  绑定\t266\n9.3.6  比较JavaScriptCore和V8\t266\n9.4  实践——高效的JavaScript代码\t266\n9.4.1  编程方式\t266\n9.4.2  例子\t268\n9.4.3  未来\t271\n第10章　插件和JavaScript扩展\t273\n10.1  NPAPI插件\t274\n10.1.1  NPAPI简介\t274\n10.1.2  WebKit和Chromium的实现\t275\n10.2  Chromium PPAPI插件\t284\n10.2.1  原理\t284\n10.2.2  结构和接口\t285\n10.2.3  工作过程\t288\n10.2.4  Native Client\t294\n10.3  JavaScript引擎的扩展机制\t297\n10.3.1  混合编程\t297\n10.3.2  JavaScript扩展机制\t299\n10.4  Chromium扩展机制\t303\n10.4.1  原理\t303\n10.4.2  基本设施\t306\n10.4.3  消息传递机制\t309\n第11章　多媒体\t311\n11.1  HTML5的多媒体支持\t311\n11.2  视频\t313\n11.2.1  HTML5视频\t313\n11.2.2  WebKit基础设施\t315\n11.2.3  Chromium视频机制\t317\n11.2.4  字幕\t328\n11.2.5  视频扩展\t330\n11.3  音频\t331\n11.3.1  音频元素\t331\n11.3.2  Web Audio\t334\n11.3.3  MIDI和Web MIDI\t336\n11.3.4  Web Speech\t337\n11.4  WebRTC\t339\n11.4.1  历史\t339\n11.4.2  原理和规范\t341\n11.4.3  实践——一个WebRTC例子\t342\n11.4.4  WebKit和Chromium的实现\t345\n第12章　安全机制\t353\n12.1  网页安全模型\t353\n12.1.1  安全模型基础\t353\n12.1.2  WebKit的实现\t363\n12.2  沙箱模型\t366\n12.2.1  原理\t366\n12.2.2  实现机制\t367\n第13章　移动WebKit\t373\n13.1  触控和手势事件\t373\n13.1.1  HTML5规范\t373\n13.1.2  工作原理\t377\n13.1.3  启示和实践\t381\n13.2  移动化用户界面\t382\n13.3  其他机制\t384\n13.3.1  新渲染机制\t384\n13.3.2  其他机制\t387\n第14章　调试机制\t389\n14.1  Web Inspector\t389\n14.1.1  基本原理\t389\n14.1.2  协议\t391\n14.1.3  WebKit内部机制\t395\n14.1.4  Chromium开发者工具\t398\n14.1.5  远程调试\t400\n14.1.6  Chromium Tracing机制\t402\n14.2  实践——基础和性能调试\t404\n14.2.1  基础调试\t404\n14.2.2  性能调试\t408\n第15章　Web前端的未来\t411\n15.1  趋势\t411\n15.2  嵌入式应用模式\t414\n15.2.1  嵌入式模式\t414\n15.2.2  CEF\t414\n15.2.3  Android WebView\t417\n15.3  Web应用和Web运行环境\t419\n15.3.1  Web应用\t419\n15.3.2  Web运行环境\t421\n15.4  Cordova项目\t423\n15.5  Crosswalk项目\t425\n15.6  Chromium OS和Chrome的Web应用\t429\n15.6.1  基本原理\t429\n15.6.2  其他Web操作系统\t431\n参考资料\t435","pages":"456","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s27307802.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s27307802.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s27307802.jpg"},"alt":"http:\/\/book.douban.com\/subject\/25910556\/","id":"25910556","publisher":"电子工业出版社","isbn10":"7121229641","isbn13":"9787121229640","title":"WebKit技术内幕","url":"http:\/\/api.douban.com\/v2\/book\/25910556","alt_title":"","author_intro":"朱永盛，Chromium项目Committer，2006年从南京大学毕业后就职于英特尔亚太研发有限公司，专注于HTML5、WebKit和Chromium等方面技术，参与过多个浏览器和Web运行环境项目，并向业界大会和技术爱好者做过多次技术分享。2013年开始初创Android系统上的Web运行环境的开源项目——Crosswalk。个人博客：blog.csdn.net\/milado_nju","summary":"《WebKit技术内幕》从炙手可热的HTML5 的基础知识入手，重点阐述目前应用最广的渲染引擎项目——WebKit。不仅着眼于系统描述WebKit 内部渲染HTML 网页的原理，并基于Chromium 的实现，阐明渲染引擎如何高效地利用硬件和最新技术，而且试图通过对原理的剖析，向读者传授实现高性能Web 前端开发所需的宝贵经验。\n《WebKit技术内幕》首先从总体上描述WebKit 架构和组成，而后涵盖Web 前端和所有与之相关的重要技术，包括网络、资源加载、HTML 和CSS 解析、渲染树、布局、硬件加速、JavaScript 引擎、多媒体、移动支持、插件机制、安全机制、调试和最新的Web 平台等。对于每一项技术，在介绍基本含义之上，详细分析WebKit 内部的工作原理，进而从实践角度道出由此带来的Web 前端开发启示。","price":"79.00元"},"book_id":"25910556","id":936561049},{"status":"wish","updated":"2015-06-24 22:41:13","user_id":"129154019","tags":["JavaScript","MyWish","AngularJS"],"book":{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"","author":["Alex Vantson"],"pubdate":"2013-9-2","tags":[{"count":4,"name":"JavaScript","title":"JavaScript"},{"count":3,"name":"AngularJS","title":"AngularJS"},{"count":3,"name":"Programming","title":"Programming"},{"count":3,"name":"angular","title":"angular"},{"count":2,"name":"front-end","title":"front-end"},{"count":2,"name":"javascript","title":"javascript"},{"count":1,"name":"MyWish","title":"MyWish"},{"count":1,"name":"US","title":"US"}],"origin_title":"","image":"https:\/\/img1.doubanio.com\/mpic\/s27203282.jpg","binding":"平装","translator":[],"catalog":"Preface\nWhat this book covers\nWhat you need for this book\nWho this book is for\nConventions\nReader feedback\nCustomer support\n1. Designing Web Applications in 2013\nAn overview of good code\nWe're not just talking about a lot of APIs\nModularity\nData driven development\nSummary\n2. The Need for Directives\nWhat makes a directive a directive\nSummary\n3. Deconstructing Directives\nGetting started\nNaming\nAttachment styles\nConfiguration options\nSummary\n4. Compile versus Link\nPeeking under the covers\nng-repeat\nWhat about linking?\nSummary\n5. Keeping it Clean with Scope\nScope = false\nScope = true\nScope = {}\nSummary\n6. Controllers – Better with Sharing\nForms and inputs\nCreating our own controller communication\nSummary\n7. Transclusion\nThat's not a word...\n...it is a solution\nManipulating the transcluded content\nSummary\n8. Good Karma – Testing in AngularJS\nGetting Started\nMy first test\nMocking data\nThe test subject\nE2E testing\nSummary\n9. A Deeper Dive into Unit Testing\nHighlighted, again\nNegative testing\nSummary\n10. Bringing it All Together\nAngular content grid\nDiving in\nThe initial directive\nConnecting Masonry\nEvents\nTiming\nFurther steps\nSummary","pages":"110","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s27203282.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s27203282.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s27203282.jpg"},"alt":"http:\/\/book.douban.com\/subject\/25808896\/","id":"25808896","publisher":"Packt Publishing","isbn10":"1783280336","isbn13":"9781783280339","title":"AngularJS Directives","url":"http:\/\/api.douban.com\/v2\/book\/25808896","alt_title":"","author_intro":"Alex Vanston\nAlex Vanston is a self-professed geek and outdoor junkie fused together. During high-school he began teaching himself how to code and has been obsessed with learning new languages and better ways to solve problems ever since. He has been building web sites and applications professionally for the past seven years for clients and companies around the world. Currently he lives in Denver, CO, where he loves hiking (5 14ers down, 49 to go), playing pickup sports, and water skiing when he can. He's the lead front end developer for ZipKick, Inc, a travel start up taking off in San Francisco, CA. You can find him online at http\/\/www.mrvdot.com, where he blogs about web development and tech.","summary":"Learn how to build an AngularJS directive\nCreate extendable modules for plug-and-play usability\nBuild apps that react in real-time to changes in your data model","price":"USD 26.69"},"book_id":"25808896","id":934587104},{"status":"wish","updated":"2015-06-24 22:40:56","user_id":"129154019","tags":["MyWish","算法","Algorithm"],"book":{"rating":{"max":10,"numRaters":31,"average":"8.1","min":0},"subtitle":"A Dektop Quick Reference","author":["George T. Heineman","Stanley Selkow","Gary Pollice"],"pubdate":"2008","tags":[{"count":44,"name":"算法","title":"算法"},{"count":27,"name":"Algorithm","title":"Algorithm"},{"count":19,"name":"O'Reilly","title":"O'Reilly"},{"count":9,"name":"计算机","title":"计算机"},{"count":8,"name":"programming","title":"programming"},{"count":7,"name":"编程","title":"编程"},{"count":6,"name":"计算机科学","title":"计算机科学"},{"count":4,"name":"程序算法","title":"程序算法"}],"origin_title":"","image":"https:\/\/img3.doubanio.com\/mpic\/s3311981.jpg","binding":"pp","translator":[],"catalog":"","pages":"364","images":{"small":"https:\/\/img3.doubanio.com\/spic\/s3311981.jpg","large":"https:\/\/img3.doubanio.com\/lpic\/s3311981.jpg","medium":"https:\/\/img3.doubanio.com\/mpic\/s3311981.jpg"},"alt":"http:\/\/book.douban.com\/subject\/3253654\/","id":"3253654","publisher":"O'Reilly","isbn10":"059651624X","isbn13":"9780596516246","title":"Algorithms in a Nutshell","url":"http:\/\/api.douban.com\/v2\/book\/3253654","alt_title":"算法技术手册","author_intro":"","summary":"Creating robust software requires the use of efficient algorithms. Algorithms in a Nutshell describes a large number of existing algorithms for solving a variety of problems, and helps you select and implement the right algorithm for your needs. With its focus on application, rather than theory, this book provides efficient code solutions in several programming languages that you can easily adapt to a specific project.","price":"USD 49.99"},"book_id":"3253654","id":934587009},{"status":"wish","updated":"2015-06-24 22:40:31","user_id":"129154019","tags":["javascript","MyWish"],"book":{"rating":{"max":10,"numRaters":65,"average":"8.7","min":0},"subtitle":"Create scalable, reusable high-quality JavaScript applications and libraries","author":["Stoyan Stefanov"],"pubdate":"2008-07-24","tags":[{"count":83,"name":"javascript","title":"javascript"},{"count":36,"name":"OOP","title":"OOP"},{"count":20,"name":"JavaScript","title":"JavaScript"},{"count":9,"name":"programming","title":"programming"},{"count":9,"name":"Web开发","title":"Web开发"},{"count":7,"name":"前端开发","title":"前端开发"},{"count":7,"name":"web","title":"web"},{"count":6,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https:\/\/img3.doubanio.com\/mpic\/s4282671.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"356","images":{"small":"https:\/\/img3.doubanio.com\/spic\/s4282671.jpg","large":"https:\/\/img3.doubanio.com\/lpic\/s4282671.jpg","medium":"https:\/\/img3.doubanio.com\/mpic\/s4282671.jpg"},"alt":"http:\/\/book.douban.com\/subject\/3182419\/","id":"3182419","publisher":"Packt Publishing","isbn10":"1847194141","isbn13":"9781847194145","title":"Object-Oriented JavaScript","url":"http:\/\/api.douban.com\/v2\/book\/3182419","alt_title":"","author_intro":"","summary":"","price":"USD 39.99"},"book_id":"3182419","id":934586867},{"status":"wish","updated":"2015-06-24 22:40:05","user_id":"129154019","tags":["Programming","编程","algorithm","MyWish"],"book":{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"700 Data Structure and Algorithmic Puzzles","author":["Narasimha Karumanchi"],"pubdate":"2011-3-9","tags":[{"count":17,"name":"算法","title":"算法"},{"count":9,"name":"Programming","title":"Programming"},{"count":5,"name":"algorithm","title":"algorithm"},{"count":5,"name":"计算机","title":"计算机"},{"count":5,"name":"编程","title":"编程"},{"count":3,"name":"计算机科学","title":"计算机科学"},{"count":2,"name":"计算机技术","title":"计算机技术"},{"count":2,"name":"英文原版","title":"英文原版"}],"origin_title":"","image":"https:\/\/img3.doubanio.com\/mpic\/s6995070.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"484","images":{"small":"https:\/\/img3.doubanio.com\/spic\/s6995070.jpg","large":"https:\/\/img3.doubanio.com\/lpic\/s6995070.jpg","medium":"https:\/\/img3.doubanio.com\/mpic\/s6995070.jpg"},"alt":"http:\/\/book.douban.com\/subject\/6958391\/","id":"6958391","publisher":"CreateSpace","isbn10":"145654988X","isbn13":"9781456549886","title":"Data Structures and Algorithms Made Easy","url":"http:\/\/api.douban.com\/v2\/book\/6958391","alt_title":"","author_intro":"","summary":"","price":"USD 29.99"},"book_id":"6958391","id":934586735},{"status":"wish","updated":"2015-06-24 22:19:10","user_id":"129154019","tags":["MyWish","node.js"],"book":{"rating":{"max":10,"numRaters":37,"average":"7.9","min":0},"subtitle":"Up and Running: Scalable Server-Side Code with JavaScript","author":["Tom Hughes-Croucher"],"pubdate":"2012-5-7","tags":[{"count":78,"name":"node.js","title":"node.js"},{"count":48,"name":"javascript","title":"javascript"},{"count":36,"name":"NodeJS","title":"NodeJS"},{"count":25,"name":"JavaScript","title":"JavaScript"},{"count":19,"name":"O'Reilly","title":"O'Reilly"},{"count":13,"name":"服务器端JavaScript","title":"服务器端JavaScript"},{"count":10,"name":"服务器","title":"服务器"},{"count":9,"name":"Node.js","title":"Node.js"}],"origin_title":"","image":"https:\/\/img1.doubanio.com\/mpic\/s6521247.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"204","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s6521247.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s6521247.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s6521247.jpg"},"alt":"http:\/\/book.douban.com\/subject\/5363928\/","id":"5363928","publisher":"O'Reilly Media","isbn10":"1449398588","isbn13":"9781449398583","title":"Node","url":"http:\/\/api.douban.com\/v2\/book\/5363928","alt_title":"","author_intro":"http:\/\/ydn.zenfs.com\/blogs\/1\/up-and-running-with-node-preview.pdf\nUp and Running With Node.js is a guide to Node.js aimed at giving you the combination of the background knowledge you need to use Node well, and the hands-on tutorials you need to get started fast.\nWhile this initial release isn't a huge one, as we progress through the process of writing we are going to be periodically sharing drafts of the book with the community. We'd love to get your thoughts and feedback on what we are doing. I've based much of what I've written on the many Node talks I've given at conferences world-wide. I hope we can write the book that you need to make the most of the amazing platform Node.js offers, so all feedback is helpful.","summary":"This book introduces you to Node, the new web development framework written in JavaScript. You'll learn hands-on how Node makes life easier for experienced JavaScript developers: not only can you work on the front end and back end in the same language, you'll also have more flexibility in choosing how to divide application logic between client and server.\nWritten by a core contributor to the framework, Node: Up and Running shows you how Node scales up to support large numbers of simultaneous connections across multiple servers, and scales down to let you create quick one-off applications with minimal infrastructure. Built on the V8 JavaScript engine that runs Google Chrome, Node is already winning the hearts and minds of many companies, including Google and Yahoo! This book shows you why.\n* Understand Node's event-loop architecture, non-blocking I\/O, and event-driven programming\n* Discover how Node supports a variety of database and data storage tools\n* Learn best practices for writing easy-to-maintain code for Node\n* Get concrete examples of how to use the various Node APIs in practice\n* Take advantage of the book’s complete API reference","price":"USD 34.99"},"book_id":"5363928","id":934579785},{"status":"wish","updated":"2015-06-14 20:46:14","user_id":"129154019","tags":["Python","MyWish"],"book":{"rating":{"max":10,"numRaters":15,"average":"7.6","min":0},"subtitle":"统计建模的Python学习法","author":["[美]Allen B. Downey（艾伦·唐尼）"],"pubdate":"2015-3","tags":[{"count":59,"name":"Python","title":"Python"},{"count":40,"name":"数据分析","title":"数据分析"},{"count":29,"name":"贝叶斯","title":"贝叶斯"},{"count":28,"name":"统计学","title":"统计学"},{"count":13,"name":"统计","title":"统计"},{"count":12,"name":"数学","title":"数学"},{"count":10,"name":"数据挖掘","title":"数据挖掘"},{"count":7,"name":"编程","title":"编程"}],"origin_title":"","image":"https:\/\/img1.doubanio.com\/mpic\/s28023092.jpg","binding":"平装","translator":["许杨毅"],"catalog":"第1章 贝叶斯定理\t1\n1.1 条件概率\t1\n1.2 联合概率\t2\n1.3 曲奇饼问题\t2\n1.4 贝叶斯定理\t3\n1.5 历时诠释\t4\n1.6 M&M豆问题\t5\n1.7 Monty Hall难题\t6\n1.8 讨论\t8\n第2章 统计计算\t9\n2.1 分布\t9\n2.2 曲奇饼问题\t10\n2.3 贝叶斯框架\t11\n2.4 Monty Hall难题\t12\n2.5 封装框架\t13\n2.6 M&M豆问题\t14\n2.7 讨论\t15\n2.8 练习\t16\n第3章 估计\t17\n3.1 骰子问题\t17\n3.2 火车头问题\t18\n3.3 怎样看待先验概率？\t20\n3.4 其他先验概率\t21\n3.5 置信区间\t23\n3.6 累积分布函数\t23\n3.7 德军坦克问题\t24\n3.8 讨论\t24\n3.9 练习\t25\n第4章 估计进阶\t27\n4.1　欧元问题\t27\n4.2　后验概率的概述\t28\n4.3　先验概率的湮没\t29\n4.4　优化\t31\n4.5　Beta分布\t32\n4.6　讨论\t34\n4.7　练习\t34\n第5章 胜率和加数\t37\n5.1 胜率\t37\n5.2 贝叶斯定理的胜率形式\t38\n5.3 奥利弗的血迹\t39\n5.4 加数\t40\n5.5 最大化\t42\n5.6 混合分布\t45\n5.7 讨论\t47\n第6章 决策分析\t49\n6.1 “正确的价格”问题\t49\n6.2 先验概率\t50\n6.3 概率密度函数\t50\n6.4 PDF的表示\t51\n6.5 选手建模\t53\n6.6 似然度\t55\n6.7 更新\t55\n6.8 最优出价\t57\n6.9 讨论\t59\n第7章 预测\t61\n7.1　波士顿棕熊队问题\t61\n7.2　泊松过程\t62\n7.3　后验\t63\n7.4　进球分布\t64\n7.5　获胜的概率\t66\n7.6　突然死亡法则\t66\n7.7　讨论\t68\n7.8　练习\t69\n第8章 观察者的偏差\t71\n8.1　红线问题\t71\n8.2　模型\t71\n8.3　等待时间\t73\n8.4　预测等待时间\t75\n8.5　估计到达率\t78\n8.6　消除不确定性\t80\n8.7　决策分析\t81\n8.8　讨论\t83\n8.9　练习\t84\n第9章 二维问题\t85\n9.1 彩弹\t85\n9.2 Suite对象\t85\n9.3 三角学\t87\n9.4 似然度\t88\n9.5 联合分布\t89\n9.6 条件分布\t90\n9.7 置信区间\t91\n9.8 讨论\t93\n9.9 练习\t94\n第10章 贝叶斯近似计算\t95\n10.1 变异性假说\t95\n10.2 均值和标准差\t96\n10.3 更新\t98\n10.4 CV的后验分布\t98\n10.5 数据下溢\t99\n10.6 对数似然\t100\n10.7 一个小的优化\t101\n10.8 ABC（近似贝叶斯计算）\t102\n10.9 估计的可靠性\t104\n10.10 谁的变异性更大？\t105\n10.11 讨论\t107\n10.12 练习\t108\n第11章 假设检验\t109\n11.1 回到欧元问题\t109\n11.2 来一个公平的对比\t110\n11.3 三角前验\t111\n11.4 讨论\t112\n11.5 练习\t113\n第12章 证据\t115\n12.1 解读SAT成绩\t115\n12.2 比例得分SAT\t115\n12.3 先验\t116\n12.4 后验\t117\n12.5 一个更好的模型\t119\n12.6 校准\t121\n12.7 效率的后验分布\t122\n12.8 预测分布\t123\n12.9 讨论\t124\n第13章 模拟\t127\n13.1 肾肿瘤的问题\t127\n13.2 一个简化模型\t128\n13.3 更普遍的模型\t130\n13.4 实现\t131\n13.5 缓存联合分布\t132\n13.6 条件分布\t133\n13.7 序列相关性\t135\n13.8 讨论\t138\n第14章 层次化模型\t139\n14.1 盖革计数器问题\t139\n14.2 从简单的开始\t140\n14.3 分层模型\t141\n14.4 一个小优化\t142\n14.5 抽取后验\t142\n14.6 讨论\t144\n14.7 练习\t144\n第15章 处理多维问题\t145\n15.1 脐部细菌\t145\n15.2 狮子，老虎和熊\t145\n15.3 分层版本\t148\n15.4 随机抽样\t149\n15.5 优化\t150\n15.6 堆叠的层次结构\t151\n15.7 另一个问题\t153\n15.8 还有工作要做\t154\n15.9 肚脐数据\t156\n15.10 预测分布\t158\n15.11 联合后验\t161\n15.12 覆盖\t162\n15.13 讨论\t164","pages":"200","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s28023092.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s28023092.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s28023092.jpg"},"alt":"http:\/\/book.douban.com\/subject\/26340992\/","id":"26340992","publisher":"人民邮电出版社","isbn10":"7115384282","isbn13":"9787115384287","title":"贝叶斯思维：统计建模的Python学习法","url":"http:\/\/api.douban.com\/v2\/book\/26340992","alt_title":"","author_intro":"作者：Allen Downey，是欧林工程学院的计算机教授，加州大学伯克利分校的计算机博士。他在韦斯利学院（Wellesley College）、科尔比学院（Colby College）和加州大学伯克利分校讲授计算机科学课程。他也是O’Reilly出版的Think Stats和Think Python图书的作者。\n译者：许杨毅，新浪网系统架构师，技术保障部总监，毕业于湖南大学，15年互联网工作经验。","summary":"这本书帮助那些希望用数学工具解决实际问题的人们，仅有的要求可能就是懂一点概率知识和程序设计。而贝叶斯方法是一种常见的利用概率学知识去解决不确定性问题的数学方法，对于一个计算机专业的人士，应当熟悉其应用在诸如机器翻译，语音识别，垃圾邮件检测等常见的计算机问题领域。\n可是本书实际上会远远扩大你的视野，即使不是一个计算机专业的人士，你也可以看到在战争环境下（二战德军坦克问题），法律问题上（肾肿瘤的假设验证），体育博彩领域（棕熊队和加人队NFL比赛问题）贝叶斯方法的威力。怎么从有限的信息判断德军装甲部队的规模，你所支持的球队有多大可能赢得冠军，在《龙与地下城》勇士中，你应当对游戏角色属性的最大值有什么样的期望，甚至在普通的彩弹射击游戏中，拥有一些贝叶斯思维也能帮助到你提高游戏水平。\n除此以外，本书在共计15章的篇幅中讨论了怎样解决十几个现实生活中的实际问题。在这些问题的解决过程中，作者还潜移默化的帮助读者形成了建模决策的方法论，建模误差和数值误差怎么取舍，怎样为具体问题建立数学模型，如何抓住问题中的主要矛盾（模型中的关键参数），再一步一步的优化或者验证模型的有效性或者局限性。在这个意义上，这本书又是一本关于数学建模的成功样本。","price":"49.00"},"book_id":"26340992","id":931519763},{"status":"wish","updated":"2015-06-10 21:20:20","user_id":"129154019","tags":["javascript","MyWish"],"book":{"rating":{"max":10,"numRaters":124,"average":"8.7","min":0},"subtitle":"","author":["Nicholas C. Zakas"],"pubdate":"2010-4-2","tags":[{"count":134,"name":"javascript","title":"javascript"},{"count":42,"name":"performance","title":"performance"},{"count":41,"name":"JavaScript","title":"JavaScript"},{"count":29,"name":"web开发","title":"web开发"},{"count":23,"name":"前端开发","title":"前端开发"},{"count":20,"name":"web","title":"web"},{"count":18,"name":"编程","title":"编程"},{"count":18,"name":"O'Reilly","title":"O'Reilly"}],"origin_title":"","image":"https:\/\/img1.doubanio.com\/mpic\/s4533864.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"231","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s4533864.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s4533864.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s4533864.jpg"},"alt":"http:\/\/book.douban.com\/subject\/4183808\/","id":"4183808","publisher":"O'Reilly Media","isbn10":"059680279X","isbn13":"9780596802790","title":"High Performance JavaScript","url":"http:\/\/api.douban.com\/v2\/book\/4183808","alt_title":"","author_intro":"","summary":"If you're like most developers, you rely heavily on JavaScript to build interactive and quick-responding web applications. The problem is that all of those lines of JavaScript code can slow down your apps. This book reveals techniques and strategies to help you eliminate performance bottlenecks during development. You'll learn how to improve execution time, downloading, interaction with the DOM, page life cycle, and more. Yahoo! frontend engineer Nicholas C. Zakas and five other JavaScript experts -- Ross Harmes, Julien Lecomte, Steven Levithan, Stoyan Stefanov, and Matt Sweeney -- demonstrate optimal ways to load code onto a page, and offer programming tips to help your JavaScript run as efficiently and quickly as possible. You'll learn the best practices to build and deploy your files to a production environment, and tools that can help you find problems once your site goes live. * Identify problem code and use faster alternatives to accomplish the same task * Improve scripts by learning how JavaScript stores and accesses data * Implement JavaScript code so that it doesn't slow down interaction with the DOM * Use optimization techniques to improve runtime performance * Learn ways to ensure the UI is responsive at all times * Achieve faster client-server communication * Use a build system to minify files, and HTTP compression to deliver them to the browser","price":"USD 34.99"},"book_id":"4183808","id":930324983},{"status":"wish","updated":"2015-06-10 21:03:45","user_id":"129154019","tags":["MyWish","javascript"],"book":{"rating":{"max":10,"numRaters":366,"average":"8.6","min":0},"subtitle":"","author":["Peter-Paul Koch"],"pubdate":"2008-4","tags":[{"count":421,"name":"javascript","title":"javascript"},{"count":92,"name":"Web","title":"Web"},{"count":84,"name":"JavaScript","title":"JavaScript"},{"count":71,"name":"ppk","title":"ppk"},{"count":50,"name":"编程","title":"编程"},{"count":49,"name":"PPK谈JavaScript","title":"PPK谈JavaScript"},{"count":36,"name":"计算机","title":"计算机"},{"count":30,"name":"网页设计","title":"网页设计"}],"origin_title":"PPK on JavaScript","image":"https:\/\/img3.doubanio.com\/mpic\/s2984236.jpg","binding":"","translator":["淘宝UED"],"catalog":"第1章　目标\na 概念回顾\n在浏览器中处理交互\n胖与瘦\njavascript的目标\nb 技术概览\n标准化\n版本\n安全\nc javascript的历史\n错误的开始\n事实标准\ncss变革\n新的开始\n下一步\n第2章　大背景\na css变革\n无侵入脚本编程\n三个层\n分离关注点\nb 表现与结构的分离\ncss修改\n更改结构还是表现\nc 行为与结构的分离\n独立文件中的函数\n从html中移除事件处理程序\nd 行为和表现的分离\n下拉菜单：hover或mouseover\/mouseout\n相同的效果与相似的效果\ne 可访问性概览\n什么是可访问性\n无脚本\n没有鼠标\n屏幕阅读器\n屏幕阅读器和事件\n可访问性和可用性\nf 可访问性规则\n条理分明的html\n产生对脚本用户有意义的内容\n重定向用户\n键盘用户\n[ noscript ]标签\ng 范例脚本\n限长的文本输入区\n易用的表单\n表单验证\n下拉菜单\n编辑样式表\n三明治拾取器\nxmlhttp测速计\n站点调查\n第3章　浏览器\na 浏览器\nmozilla家族\nwindows的explorer\nsafari\nopera\n其他图形桌面浏览器\n移动电话\n屏幕阅读器\nb 兼容性问题\n问题\n解决方案\nc 对象检测\n对象检测是如何工作的\n我们该走多远\nd 浏览器检测\n为什么浏览器检测行不通\n浏览器检测的军备竞赛\n拆解浏览器字符串\n浏览器检测的正确使用\ne 调试\n错误消息\n处理浏览器的bug\n范例\n报告浏览器bug\n第4章　准备\n第5章　核心\n第6章　bom\n第7章　事件\n第8章　dom\n第9章　css修改\n第10章　数据检索\n后记","pages":"337","images":{"small":"https:\/\/img3.doubanio.com\/spic\/s2984236.jpg","large":"https:\/\/img3.doubanio.com\/lpic\/s2984236.jpg","medium":"https:\/\/img3.doubanio.com\/mpic\/s2984236.jpg"},"alt":"http:\/\/book.douban.com\/subject\/3022779\/","id":"3022779","publisher":"人民邮电出版社","isbn10":"7115175454","isbn13":"9787115175458","title":"ppk谈JavaScript","url":"http:\/\/api.douban.com\/v2\/book\/3022779","alt_title":"PPK on JavaScript","author_intro":"Peter-Paul Koch（即ppk)是自学成才的世界级JavaScript专家，1970年生于荷兰阿姆斯特丹，大学主修古希腊罗马史专业。他拥有多年客户端web开发经验，所维护的网站www.quirksmode.org已成为全球JavaScript开发人员最重要的参考资源之一。他常年为业界顶尖的媒体 Digital Web Magazine、A List Apart等撰写技术文章，包括影响深远的The JavaScript Manifesto。","summary":"本书全方位介绍了JavaScript，主要讨论了浏览器兼容性、可访问性、底层语法以及与HTML结构层的协同等问题。书中既包括理论性的讲解，又给出了相关的示例脚本以进行进一步阐述。通过8个真实项目示例，介绍了JavaScript核心语言、BOM、事件处理、DOM、修改CSS样式表以及数据检索等内容。\n本书适合具有一定网页开发经验的Web开发人员阅读。","series":{"id":"660","title":"图灵程序设计丛书"},"price":"59.00元"},"book_id":"3022779","id":930320067},{"status":"wish","updated":"2015-06-10 21:03:20","user_id":"129154019","tags":["JavaScript","MyWish"],"book":{"rating":{"max":10,"numRaters":85,"average":"8.0","min":0},"subtitle":"","author":["Marijn Haverbeke"],"pubdate":"2012-10-1","tags":[{"count":191,"name":"JavaScript","title":"JavaScript"},{"count":53,"name":"编程","title":"编程"},{"count":33,"name":"前端开发","title":"前端开发"},{"count":30,"name":"计算机","title":"计算机"},{"count":19,"name":"javascript","title":"javascript"},{"count":17,"name":"web","title":"web"},{"count":17,"name":"前端","title":"前端"},{"count":16,"name":"Web前端开发","title":"Web前端开发"}],"origin_title":"Eloquent JavaScript: A Modern Introduction to Programming","image":"https:\/\/img1.doubanio.com\/mpic\/s11431224.jpg","binding":"","translator":["徐涛"],"catalog":"对本书的赞誉\n译者序\n前言\n第1章　JavaScript基础：值、变量、控制流程\t1\n1.1   值1\n1.1.1   数字1\n1.1.2　算术2\n1.1.3　字符串3\n1.1.4　一元操作符3\n1.1.5　布尔值、比较和布尔逻辑4\n1.1.6　表达式与语句5\n1.2   变量5\n1.3   环境7\n1.3.1   函数7\n1.3.2　prompt和confirm7\n1.3.3　print函数8\n1.3.4　修改环境8\n1.4　程序结构8\n1.4.1　条件执行9\n1.4.2　while循环与do循环9\n1.4.3　缩进代码11\n1.4.4　for循环11\n1.4.5　跳出循环12\n1.4.6　更新变量简便法12\n1.4.7　使用switch进行调度12\n1.4.8　大小写13\n1.4.9　注释13\n1.5　进一步认识类型14\n1.5.1　Undefined值14\n1.5.2　自动类型转换14\n1.5.3　自动类型转换的风险15\n1.5.4　进一步了解&&和||16\n第2章　函数17\n2.1　剖析函数定义17\n2.1.1　定义顺序18\n2.1.2　局部变量18\n2.1.3　嵌套作用域19\n2.1.4　栈20\n2.1.5　函数值20\n2.1.6　闭包21\n2.1.7　可选参数21\n2.2　技巧22\n2.2.1　避免重复22\n2.2.2　纯函数23\n2.2.3　递归24\n第3章　数据结构：对象与数组27\n3.1　问题：Emily姨妈家的猫27\n3.2　基本数据结构28\n3.2.1　属性28\n3.2.2　对象值29\n3.2.3　对象即集合30\n3.2.4　易变性30\n3.2.5　对象即集合：数组31\n3.2.6　方法32\n3.3　解决关于Emily姨妈家猫的问题33\n3.3.1　分离段落33\n3.3.2　找出相关段落34\n3.3.3　提取猫的名字35\n3.3.4　完整算法35\n3.3.5　清理代码36\n3.3.6　日期表示38\n3.3.7　日期提取39\n3.3.8　收集更多信息40\n3.3.9　数据表示41\n3.4　更多理论42\n3.4.1　arguments对象42\n3.4.2　完成扫尾工作44\n3.4.3　Math对象44\n3.4.4　可枚举属性44\n第4章　错误处理47\n4.1　问题类型47\n4.1.1　程序员错误47\n4.1.2　运行时错误48\n4.2　处理错误48\n4.2.1　返回特殊值48\n4.2.2　异常49\n4.2.3　异常之后的错误清除50\n4.2.4　Error对象51\n4.2.5　未处理的异常51\n4.2.6　选择性Catch51\n4.3　自动化测试52\n第5章　函数式编程55\n5.1　抽象55\n5.2　高阶函数56\n5.2.1　修改函数57\n5.2.2　归约函数58\n5.2.3　映射数组59\n5.3　隐士的悲惨故事59\n5.3.1　HTML60\n5.3.2　隐士的文本文件61\n5.3.3　找出段落64\n5.3.4　强调与脚注64\n5.3.5　移动脚注67\n5.3.6　生成HTML67\n5.3.7　转化隐士的书70\n5.4　其他函数技巧71\n5.4.1　操作符函数71\n5.4.2　分布应用72\n5.4.3　组合73\n第6章　面向对象编程75\n6.1　对象75\n6.1.1　定义方法75\n6.1.2　构造函数76\n6.1.3　从原型中构建77\n6.1.4　构造函数与原型77\n6.1.5　原型污染79\n6.1.6　对象即词典80\n6.1.7　指定接口81\n6.2　构建生态系统模拟82\n6.2.1　定义生态圈82\n6.2.2　空间里的点83\n6.2.3　呈现网格83\n6.2.4　昆虫的编程接口85\n6.2.5　生态圈对象86\n6.2.6　this及其作用域87\n6.2.7　有活力的生命88\n6.2.8　昆虫移动90\n6.2.9　更多生命形式90\n6.2.10　多态性93\n6.3　更逼真的模拟生态系统93\n6.3.1　继承93\n6.3.2　记录能量94\n6.3.3　添加植物96\n6.3.4　食草动物97\n6.3.5　为它带来生命97\n6.3.6　人工愚蠢99\n6.4　原型继承100\n6.4.1　类型定义工具100\n6.4.2　类型原型101\n6.4.3　对象的世界102\n6.4.4　instanceof操作符103\n6.4.5　混合类型104\n第7章　模块化107\n7.1　模块107\n7.1.1　生态圈例子107\n7.1.2 　模块文件化108\n7.2　模块的形态108\n7.2.1　函数作为局部命名空间109\n7.2.2　模块对象110\n7.3　接口设计111\n7.3.1　可预见性111\n7.3.2　可组合性111\n7.3.3　分层接口112\n7.3.4　参数对象112\n7.4　JS库113\n第8章　正则表达式115\n8.1　语法115\n8.1.1　匹配字符集115\n8.1.2　匹配单词和字符边界116\n8.1.3　重复模式117\n8.1.4　子表达式分组117\n8.1.5　多选一117\n8.2　匹配与替换118\n8.2.1　匹配方法118\n8.2.2　正则表达式和替换方法118\n8.2.3　动态创建RegExp 对象120\n8.3　解析.ini文件121\n8.4　结论123\n第9章　Web编程：速成课125\n9.1　互联网125\n9.1.1　URL网址125\n9.1.2　服务器端编程126\n9.1.3　客户端编程126\n9.2 　Web脚本基础知识126\n9.2.1　windows对象126\n9.2.2　document对象127\n9.2.3　计时器128\n9.2.4　表单128\n9.2.5　表单脚本化130\n9.2.6　自动焦点132\n9.3　浏览器非兼容性132\n9.4　延伸阅读133\n第10章　文档对象模型135\n10.1　DOM元素135\n10.1.1　节点链接136\n10.1.2　节点类型136\n10.1.3　innerHTML属性137\n10.1.4　查找节点137\n10.1.5　创建节点138\n10.1.6　节点创建辅助函数138\n10.1.7　移动节点139\n10.1.8　print实现140\n10.2　样式表140\n10.2.1　样式属性141\n10.2.2　隐藏节点141\n10.2.3　定位141\n10.2.4　控制节点大小142\n10.3　警示语142\n第11章　浏览器事件143\n11.1　事件句柄143\n11.1.1　注册事件句柄143\n11.1.2　事件对象145\n11.1.3　鼠标相关事件类型145\n11.1.4　键盘事件146\n11.1.5　停止事件147\n11.1.6　事件对象正规化147\n11.1.7　跟踪焦点148\n11.1.8　表单事件148\n11.1.9　window事件149\n11.2　示例：实现推箱子149\n11.2.1　等级输入格式149\n11.2.2　程序设计150\n11.2.3　游戏板展示150\n11.2.4 　控制器对象153\n第12章　HTTP请求157\n12.1　HTTP协议157\n12.2　XMLHttpRequest API158\n12.2.1　创建请求对象158\n12.2.2　简单的请求158\n12.2.3　发送异步请求159\n12.2.4　获取XML数据160\n12.2.5　读取JSON数据161\n12.2.6 　基本的请求包装161\n12.3　学习HTTP162","pages":"176","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s11431224.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s11431224.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s11431224.jpg"},"alt":"http:\/\/book.douban.com\/subject\/19933548\/","id":"19933548","publisher":"机械工业出版社华章公司","isbn10":"7111396650","isbn13":"9787111396659","title":"JavaScript编程精解","url":"http:\/\/api.douban.com\/v2\/book\/19933548","alt_title":"Eloquent JavaScript: A Modern Introduction to Programming","author_intro":"作者简介：\nMarijn Haverbeke　世界级JavaScript程序员，通晓多种编程语言，在Web开发方面积累了丰富的经验，在JavaScript领域颇有影响力。如今，他专注于动态语言下的数据库系统的研究和Web API的设计。此外，他创建并维护着多个流行的开源项目。\n译者简介：\n徐涛（网名：汤姆大叔），微软最有价值专家（MVP）、项目经理、软件架构师，擅长大型互联网产品的架构与设计，崇尚敏捷开发模式，熟悉设计模式、前端技术以及各种开源产品，曾获MCP、MCSE、MCDBA、MCTS、MCITP、MCPD、PMP认证。\n博客地址：http:\/\/www.cnblogs.com\/TomXu","summary":"如果你只想阅读一本关于JavaScript的图书，那么本书应该是你的首选。本书由世界级JavaScript程序员撰写，JavaScript之父和多位JavaScript专家鼎力推荐。本书适合作为系统学习JavaScript的参考书，它在写作思路上几乎与现有的所有同类书都不同，打破常规，将编程原理与运用规则完美地结合在一起，而且将所有知识点与一个又一个经典的编程故事融合在一起，读者可以在轻松的游戏式开发中学会JavaScript程序设计，趣味性十足，可操作性极强。\n全书一共12章：第1~3章介绍了JavaScript的基本语法，旨在帮助读者编写出正确的JavaScript程序，包含数字、算术、字符串、变量、程序结构、控制流程、类型、函数、对象和数组等最基础和最核心的内容；第4~7章讲解了JavaScript编程中的高级技术，目的是帮助读者编写更复杂的JavaScript程序，主要涉及错误处理、函数式编程、面向对象编程、模块化等重要内容；第8~12章则将重心转移到JavaScript环境中可用的工具上，分别详细讲解了正则表达式、与Web编程相关的知识、文档对象模型、浏览器事件和HTTP请求等。","series":{"id":"12919","title":"华章程序员书库"},"price":"49.00元"},"book_id":"19933548","id":930319956},{"status":"wish","updated":"2015-06-10 20:47:45","user_id":"129154019","tags":["Javascript","MyWish"],"book":{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"","author":["Stoyan Stefanov","Kumar Chetan Sharma"],"pubdate":"2013-7-26","tags":[{"count":6,"name":"Javascript","title":"Javascript"},{"count":3,"name":"OOP","title":"OOP"},{"count":2,"name":"js","title":"js"},{"count":2,"name":"有电子版","title":"有电子版"},{"count":1,"name":"JavaScript","title":"JavaScript"},{"count":1,"name":"MyWish","title":"MyWish"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https:\/\/img1.doubanio.com\/mpic\/s27048268.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"382","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s27048268.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s27048268.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s27048268.jpg"},"alt":"http:\/\/book.douban.com\/subject\/24835411\/","id":"24835411","publisher":"Packt Publishing","isbn10":"1849693129","isbn13":"9781849693127","title":"Object-Oriented JavaScript, 2nd Edition","url":"http:\/\/api.douban.com\/v2\/book\/24835411","alt_title":"","author_intro":"","summary":"","price":"USD 49.99"},"book_id":"24835411","id":930314884},{"status":"wish","updated":"2015-06-10 20:46:29","user_id":"129154019","tags":["javascript","web","MyWish"],"book":{"rating":{"max":10,"numRaters":64,"average":"9.1","min":0},"subtitle":"The Good Parts","author":["克罗克福特"],"pubdate":"2009-1","tags":[{"count":86,"name":"javascript","title":"javascript"},{"count":35,"name":"编程","title":"编程"},{"count":26,"name":"web","title":"web"},{"count":22,"name":"JavaScript","title":"JavaScript"},{"count":20,"name":"技术","title":"技术"},{"count":18,"name":"programming","title":"programming"},{"count":11,"name":"js","title":"js"},{"count":10,"name":"程序设计","title":"程序设计"}],"origin_title":"","image":"https:\/\/img1.doubanio.com\/mpic\/s3400022.jpg","binding":"平装","translator":[],"catalog":"","pages":"153","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s3400022.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s3400022.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s3400022.jpg"},"alt":"http:\/\/book.douban.com\/subject\/3332698\/","id":"3332698","publisher":"东南大学出版社","isbn10":"7564114479","isbn13":"9787564114473","title":"JavaScript","url":"http:\/\/api.douban.com\/v2\/book\/3332698","alt_title":"","author_intro":"","summary":"《JavaScript:The Good Parts(影印版)》一书中，Crockford深度分析了一堆好的意图和盲目的错误，为你提供了所有JavaScript的地道优良部分的细节，包括：·语法·继承·方法；·对象·数组·风格；·函数·正则表达式·美丽的特性大多数编程语言包含优良和拙劣的部件，但对JavaScript而言后者的比重较大，因为它在匆忙中开发和发布，还没能够得到精炼。这本权威的书剔除了大多数可怕的JavaScript特性，展现了JavaScript的另一部分，这一部分比JavaScript语言作为一个整体更加稳定、更具有可读性以及可维护性——可以用这个部分创建真正可展的合高效的代码。\n作者Douglas Crockford(他被很多开发社区认为是JavaScript专家)提出了足够多的好想法，让JavaScript成为一个杰出的面向对象编程语言。不幸的是，这些好想法(比如函数、弱类型、动态对象和表达能力很强的对象文字注释)被掺杂了些坏想法(比如基于全局变量的编程模型)。\n当Java Applet陨落的时候，JavaScript成为了Web编程的缺省语言，但它的流行程度跟它作为一个编程语言的质量完全没有关系。","price":"28.00元"},"book_id":"3332698","id":930314445},{"status":"wish","updated":"2015-06-09 21:09:18","user_id":"129154019","tags":["MyWish","AngularJS","编程"],"book":{"rating":{"max":10,"numRaters":210,"average":"7.2","min":0},"subtitle":"","author":["格林 (Green.B.)","夏德瑞 (Seshadri.S.)"],"pubdate":"2013-10-1","tags":[{"count":204,"name":"AngularJS","title":"AngularJS"},{"count":88,"name":"javascript","title":"javascript"},{"count":71,"name":"JavaScript","title":"JavaScript"},{"count":67,"name":"前端","title":"前端"},{"count":62,"name":"前端开发","title":"前端开发"},{"count":41,"name":"Web","title":"Web"},{"count":30,"name":"编程","title":"编程"},{"count":28,"name":"计算机","title":"计算机"}],"origin_title":"AngularJS","image":"https:\/\/img1.doubanio.com\/mpic\/s28011614.jpg","binding":"平装","translator":["大漠穷秋"],"catalog":"前言 ............................................................................. vii\n第1 章 AngularJS 简介 ................................................. 1\n一些概念 ............................................................................................................... 2\n客户端模板 .................................................................................................... 2\nModel View Controller（MVC） ..................................................................... 3\n数据绑定 ........................................................................................................ 4\n依赖注入 ........................................................................................................ 5\n指令 ................................................................................................................ 6\n实例：购物车 ....................................................................................................... 6\n接下来 ................................................................................................................... 9\n第2 章 AngularJS 应用骨架 .........................................11\n调用Angular ....................................................................................................... 11\n加载脚本 ...................................................................................................... 11\n使用ng-app 声明Angular 的边界 ................................................................ 12\nModel View Controller ........................................................................................ 12\n模板和数据绑定 .................................................................................................. 15\n显示文本 ...................................................................................................... 16\n表单输入 ...................................................................................................... 16\n浅谈非入侵式JavaScript .............................................................................. 19\n列表、表格以及其他迭代型元素 ................................................................. 22\n隐藏和显示 .................................................................................................. 24\nCSS 类和样式 ............................................................................................... 25\n反思src 和href 属性 .................................................................................... 27\n表达式 .......................................................................................................... 28\n区分UI 和控制器的职责 .............................................................................. 28\n利用$scope 暴露模型数据 ........................................................................... 29\n使用$watch 监控数据模型的变化 ............................................................... 30\nwatch() 中的性能注意事项 ........................................................................... 33\n使用Module（模块）组织依赖关系 .................................................................. 35\n我需要多少个模块呢 .................................................................................... 38\n使用过滤器格式化数据 ....................................................................................... 39\n使用路由和$location 切换视图 .......................................................................... 40\nindex.html ..................................................................................................... 41\nlist.html ........................................................................................................ 42\ndetail.html .................................................................................................... 42\ncontrollers.js ................................................................................................. 42\n与服务器交互 ..................................................................................................... 43\n使用指令修改DOM ............................................................................................ 45\nindex.html ..................................................................................................... 46\ncontrollers.js ................................................................................................. 46\n校验用户输入 ..................................................................................................... 47\n继续前进 ............................................................................................................. 48\n第3 章 使用AngularJS 进行开发 .................................49\n项目结构 ............................................................................................................. 49\n工具 .................................................................................................................... 52\n各种IDE ...................................................................................................... 52\n运行你的应用 ..................................................................................................... 53\n使用Yeoman ................................................................................................ 53\n不使用Yeoman ............................................................................................. 54\nAngularJS 下的测试 ............................................................................................ 54\nKarma ........................................................................................................... 55\n单元测试 ............................................................................................................. 57\n端到端\/ 集成测试 ............................................................................................... 58\n编译 .................................................................................................................... 60\n其他好用的工具 .................................................................................................. 62\n调试 .............................................................................................................. 62\nBatarang ....................................................................................................... 62\nYeoman ：优化你的工作流程 .............................................................................. 65\n安装Yeoman ................................................................................................ 66\n运行服务器 .................................................................................................. 66\n添加新的路由、视图和控制器 ..................................................................... 66\n关于测试 ...................................................................................................... 67\n构建项目 ...................................................................................................... 67\n与RequireJS 集成 ............................................................................................... 68\n第4 章 一款AngularJS 应用剖析 .................................77\n应用 .................................................................................................................... 77\n模型、控制器和模板之间的关系 ........................................................................ 78\n模型 .................................................................................................................... 79\n控制器、指令及服务 .......................................................................................... 80\n服务 .............................................................................................................. 80\n指令 .............................................................................................................. 84\n控制器 .......................................................................................................... 86\n模板 .................................................................................................................... 90\n测试 .................................................................................................................... 96\n单元测试 ...................................................................................................... 96\n场景测试 .................................................................................................... 100\n第5 章 与服务器交互 .................................................101\n利用$http 进行通信 .......................................................................................... 101\n进一步配置请求 ......................................................................................... 103\n设置HTTP 头 ............................................................................................. 104\n缓存响应 .................................................................................................... 105\n转换请求和响应 ......................................................................................... 106\n单元测试 ........................................................................................................... 107\n使用RESTful 资源 ............................................................................................ 108\n声明 ............................................................................................................ 111\n自定义方法 ................................................................................................ 111\n别用回调！（除非你真的需要它们） ......................................................... 112\n简化服务端操作 ......................................................................................... 112\nngResource 单元测试 ................................................................................. 113\n$q 和Promise .................................................................................................... 114\n拦截响应 ........................................................................................................... 115\n安全性措施 ....................................................................................................... 116\nJSON 漏洞 .................................................................................................. 116\nXSRF .......................................................................................................... 117\n第6 章 指令 ..............................................................119\n指令和HTML 校验 ........................................................................................... 119\nAPI 概览 ........................................................................................................... 120\n为你的指令命名 ......................................................................................... 121\n用来定义指令的对象 .................................................................................. 122\n内嵌 ............................................................................................................ 126\ncompile 和link 函数 ................................................................................... 126\n作用域 ........................................................................................................ 128\n操作DOM 元素 .......................................................................................... 132\n控制器 ........................................................................................................ 134\n继续前进 ........................................................................................................... 137\n第7 章 其他注意点 ....................................................139\n$location ........................................................................................................... 139\nHTML5 模式和Hashbang 模式 .................................................................. 142\nAngularJS Module 类的方法 ............................................................................. 145\nMain 方法在哪里 ........................................................................................ 145\n加载和依赖 ................................................................................................ 146\n快捷方法 .................................................................................................... 146\n使用$on、$emit 和$broadcast 在作用域之间进行交互 ................................... 149\nCookies ............................................................................................................. 150\n国际化和本地化 ................................................................................................ 151\n在AngularJS 里面应该怎么做 ................................................................... 152\n怎样才能让一切运行起来呢 ...................................................................... 152\n常见问题 .................................................................................................... 153\nHTML 无害化和Sanitize 模块 .......................................................................... 153\nLinky .......................................................................................................... 155\n第8 章 速查和技巧 ....................................................157\n封装jQuery Datepicker ..................................................................................... 157\nng-model .................................................................................................... 159\n绑定select .................................................................................................. 159\n调用select .................................................................................................. 159\n例子中的其他内容 ..................................................................................... 160\nTeams List 应用：过滤器和控制器的交互 ........................................................ 161\n搜索框 ........................................................................................................ 165\n下拉框 ........................................................................................................ 165\n复选框 ........................................................................................................ 165\n迭代器 ........................................................................................................ 165\nAngularJS 中的文件上传 .................................................................................. 166\n使用Socket.IO .................................................................................................. 169\n简单的分页服务 ................................................................................................ 172\n与服务端协作及登录 ........................................................................................ 175\n结论 .................................................................................................................. 179\n索引 ...........................................................................181","pages":"187","images":{"small":"https:\/\/img1.doubanio.com\/spic\/s28011614.jpg","large":"https:\/\/img1.doubanio.com\/lpic\/s28011614.jpg","medium":"https:\/\/img1.doubanio.com\/mpic\/s28011614.jpg"},"alt":"http:\/\/book.douban.com\/subject\/25752512\/","id":"25752512","publisher":"电子工业出版社","isbn10":"7121215748","isbn13":"9787121215742","title":"用AngularJS开发下一代Web应用","url":"http:\/\/api.douban.com\/v2\/book\/25752512","alt_title":"AngularJS","author_intro":"Brad Green是Google公司AngularJS项目的技术经理。他同时还直接负责可访问性和技术支持方面的工作。\nShyam Seshadri是Fundoo Solutions公司的老板兼CEO，同时经营AngularJS商店，并且致力于为印度市场提供创造性和有趣的产品。","summary":"AngularJS是一款来自Google的前端JS框架，它的核心特性有：MVC、双向数据绑定、指令和语义化标签、模块化工具、依赖注入、HTML模板，以及对常用工具的封装，例如$http、$cookies、$location等。AngularJS框架的体积非常小，但是设计理念和功能却非常强大，值得前端开发者深入学习。\n本书对AngularJS框架的核心特性做了全面的介绍，包括常用的开发工具和开发环境。作为国内第一本关于AngularJS的书籍，本书是学习AngularJS的必备入门工具。","series":{"id":"697","title":"博文视点O'reilly系列"},"price":"CNY 55.00"},"book_id":"25752512","id":930023947},{"status":"wish","updated":"2015-06-09 21:07:36","user_id":"129154019","tags":["编程","MyWish"],"book":{"rating":{"max":10,"numRaters":1223,"average":"9.1","min":0},"subtitle":"","author":["Douglas Crockford"],"pubdate":"2009年","tags":[{"count":1574,"name":"JavaScript","title":"JavaScript"},{"count":540,"name":"Web前端开发","title":"Web前端开发"},{"count":200,"name":"O'Reilly","title":"O'Reilly"},{"count":198,"name":"编程","title":"编程"},{"count":190,"name":"web开发","title":"web开发"},{"count":157,"name":"计算机","title":"计算机"},{"count":142,"name":"web","title":"web"},{"count":134,"name":"javacript","title":"javacript"}],"origin_title":"","image":"https:\/\/img3.doubanio.com\/mpic\/s3651235.jpg","binding":"平装","translator":["赵泽欣","鄢学鹍"],"catalog":"","pages":"155","images":{"small":"https:\/\/img3.doubanio.com\/spic\/s3651235.jpg","large":"https:\/\/img3.doubanio.com\/lpic\/s3651235.jpg","medium":"https:\/\/img3.doubanio.com\/mpic\/s3651235.jpg"},"alt":"http:\/\/book.douban.com\/subject\/3590768\/","id":"3590768","publisher":"电子工业出版社","isbn10":"7121084376","isbn13":"9787121084379","title":"JavaScript语言精粹","url":"http:\/\/api.douban.com\/v2\/book\/3590768","alt_title":"JavaScript: The Good Parts","author_intro":"Douglas Crockford是一名来自Yahoo!的资深JavaScript架构师，以创造和维护JSON (JavaScriptObject Notation) 格式而为大家所熟知。他定期在各类会议上发表有关高级JavaScript的主题演讲。","summary":"本书通过对JavaScript语言的分析，甄别出好的和坏的特性，从而提取出相对这门语言的整体而言具有更好的可靠性、可读性和可维护性的JavaScript的子集，以便你能用它创建真正可扩展的和高效的代码。\n雅虎资深JavaScript架构师Douglas Crockford倾力之作。\n向读者介绍如何运用JavaScript创建真正可扩展的和高效的代码。","series":{"id":"697","title":"博文视点O'reilly系列"},"price":"35.00"},"book_id":"3590768","id":930023447}]}